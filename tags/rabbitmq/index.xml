<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rabbitmq on java学习</title>
    <link>https://1935868896.github.io/tags/rabbitmq/</link>
    <description>Recent content in rabbitmq on java学习</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 30 Mar 2021 11:30:03 +0000</lastBuildDate><atom:link href="https://1935868896.github.io/tags/rabbitmq/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>springboot 如何使用rabbitmq</title>
      <link>https://1935868896.github.io/post/springboot-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8rabbitmq/</link>
      <pubDate>Tue, 30 Mar 2021 11:30:03 +0000</pubDate>
      
      <guid>https://1935868896.github.io/post/springboot-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8rabbitmq/</guid>
      <description>基本知识: 重要组件  生产者: 生产消息并选择发送给,某个exchange(交换机),并指定路由键,路由键决定了投递给哪个队列 交换机: 首先交换机本身通过路由键绑定多个队列,接收到消息后根据路由选择将消息发送到哪个队列 队列: 队列接收到消息 消费者: 消费者监听队列,获得消息  消息路由  direct :生产者发送消息时的路由键 和交换机投递消息给队列时的路由键完全一致才会进行投递,多个队列只会消费一条信息 fanout:生产者发送的消息,会投递给交换机绑定的所有队列,每个队列都会获得一份信息 topic:和direct基本一致,区别在于路由键不再要求完全一致,类似正则匹配,&amp;quot;#&amp;ldquo;匹配0个和多个单词,&amp;quot;*&amp;ldquo;匹配一个单词 headers:极少使用  安装 docker安装 1.docker pull rabbitmq:3.8-management2.docker run -p 5672:5672 -p 15672:15672 --name rabbitmq -d rabbitmq:3.8-management登录 ip:5672,输入guest,guest即可
springboot简单整合 添加依赖 &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-amqp&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.amqp&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-rabbit-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; 配置文件 如果不在本地安装的话,这里配置一下ip地址和端口号
spring: rabbitmq: host: new ip 创建并绑定交换机,队列 创建交换机 @Autowired AmqpAdmin amqpAdmin; @Test void createExchange() { /** name : 交换机的名字 durable: 是否持久化 autoDelete: 当交换机上绑定的队列都消失,自动删除,如果是初次创建的话不会触发自动删除机制 **/ Exchange exchange = new TopicExchange(&amp;#34;hello-topic-exchange&amp;#34;, true, false); amqpAdmin.</description>
    </item>
    
  </channel>
</rss>
